{"version":3,"sources":["components/jumbotron.js","utils/api.js","components/searchBar.js","components/table.js","App.js","reportWebVitals.js","index.js"],"names":["Jumbotron","className","id","axios","get","SearchBar","props","onChange","handleInputChange","value","search","name","type","placeholder","onClick","handleFormSubmit","class","Table","state","sortOrder","results","event","target","searchTerm","toLowerCase","setState","sortByFName","sortedEmployees","sort","a","b","first","reverse","sortByLName","last","API","then","res","data","console","log","catch","err","this","map","item","includes","src","picture","thumbnail","alt","phone","email","DateFormat","dob","date","login","uuid","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.861f2f2d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/jumbotron.css\"\r\n\r\nfunction Jumbotron() {\r\n  return (\r\n  <div>\r\n    <div className=\"jumbotron jumbotron-fluid\" id=\"jumboTron\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\"><i className=\"fas fa-users\"></i> <b>Employee Directory</b></h1>\r\n        <p className=\"lead\">You can search by first or last name or select a column heading arrow to sort</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;","import axios from \"axios\";\r\nconst url = \"https://randomuser.me/api/?results=50\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    ApiSearch: function () {\r\n        return axios.get(url)\r\n    }\r\n}","import React from \"react\";\r\nimport \"../styles/searchBar.css\"\r\n\r\nconst SearchBar = (props) => {\r\n\r\n  return (\r\n    <form>\r\n    <div className=\"form-group search-widget\">\r\n      <div className=\"input-group mb-3\">\r\n        <input\r\n          onChange={props.handleInputChange}\r\n          value={props.search}\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search Directory Here\"\r\n          id=\"search\"\r\n        />\r\n          <button onClick={props.handleFormSubmit} className=\"btn-primary\"><i class=\"fas fa-search\"></i></button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  );\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport API from \"../utils/api.js\"\r\nimport Search from \"../components/searchBar\"\r\nimport \"../styles/table.css\"\r\nimport DateFormat from 'dateformat';\r\n\r\nclass Table extends React.Component {\r\n\r\n  state = {\r\n    sortOrder: \"\",\r\n    results: [],\r\n    search: \"\"\r\n  }\r\n\r\n  //The API call randomuser.me\r\n  componentDidMount() {\r\n    API.ApiSearch()\r\n      .then(res => {\r\n        this.setState({ results: res.data.results })\r\n        console.log(this.state.results)\r\n      }).catch(err => console.log(err))\r\n  }\r\n  //Handle the search bar input\r\n  handleInputChange = event => {\r\n    if (event.target.name === \"search\") {\r\n      const searchTerm = event.target.value.toLowerCase();\r\n      this.setState({\r\n        search: searchTerm\r\n      })\r\n    }\r\n  }\r\n//This is to sort by first name\r\n  sortByFName = () => {\r\n    const sortedEmployees = this.state.results.sort((a, b) => {\r\n      if (b.name.first > a.name.first) {\r\n        return -1\r\n      }\r\n      if (a.name.first > b.name.first) {\r\n        return 1\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    if (this.state.sortOrder === \"DESC\") {\r\n      sortedEmployees.reverse();\r\n      this.setState({ sortOrder: \"ASC\" });\r\n    } else {\r\n      this.setState({ sortOrder: \"DESC\" });\r\n    }\r\n    this.setState({ results: sortedEmployees })\r\n  }\r\n\r\n  //Sort by the last name\r\n  sortByLName = () => {\r\n    const sortedEmployees = this.state.results.sort((a, b) => {\r\n      if (b.name.last > a.name.last) {\r\n        return -1\r\n      }\r\n      if (a.name.last > b.name.last) {\r\n        return 1\r\n      }\r\n      return 0;\r\n    });\r\n    if (this.state.sortOrder === \"DESC\") {\r\n      sortedEmployees.reverse();\r\n      this.setState({ sortOrder: \"ASC\" });\r\n    } else {\r\n      this.setState({ sortOrder: \"DESC\" });\r\n    }\r\n    this.setState({ results: sortedEmployees })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Search handleInputChange={this.handleInputChange}\r\n          search={this.state.search} />\r\n\r\n        <div className=\"table-responsive\">\r\n        <table className=\"table table-striped table-resposive text-center table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>Image</th>\r\n                <th>First Name <span className=\"downArrow\" onClick={this.sortByFName}></span></th>\r\n                <th>Last Name <span className=\"downArrow\" onClick={this.sortByLName}></span></th>\r\n                <th>Phone</th>\r\n                <th>Email</th>\r\n                <th>DOB </th>\r\n              </tr>\r\n            </thead>\r\n\r\n            { \r\n              this.state.results && this.state.results.map(item =>\r\n                item.name.first.toLowerCase().includes(this.state.search) ?\r\n                  <tbody key={item.login.uuid}>\r\n                    <tr>\r\n                      <td ><img src={item.picture.thumbnail} alt=\"thumbnail\" /></td>\r\n                      <td >{item.name.first}</td>\r\n                      <td >{item.name.last}</td>\r\n                      <td >{item.phone}</td>\r\n                      <td >{item.email}</td>\r\n                      <td>{DateFormat(item.dob.date, \"mediumDate\")}</td>  \r\n                    </tr>\r\n                  </tbody>\r\n                  :\r\n                  item.name.last.toLowerCase().includes(this.state.search) ?\r\n                    <tbody key={item.login.uuid}>\r\n                      <tr>\r\n                      <td ><img src={item.picture.thumbnail} className=\"rounded-circle\" alt=\"thumbnail\" /></td>\r\n                        <td >{item.name.first}</td>\r\n                        <td >{item.name.last}</td>\r\n                        <td >{item.phone} </td>\r\n                        <td >{item.email}</td>\r\n                        <td>{DateFormat(item.dob.date, \"mediumDate\")}</td>  \r\n                      </tr>\r\n                    </tbody>\r\n                    :\r\n                    null\r\n              )}\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table;","import React from \"react\";\nimport Jumbotron from \"./components/jumbotron\";\nimport Table from \"./components/table\"; \n\nfunction App() {\n  return (\n    <div>\n    <Jumbotron/>\n    <Table />\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}